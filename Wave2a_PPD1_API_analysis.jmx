<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Wave2a_PPD1_API_Analysis" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults-PPD1" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">inmarsat-preprod.apigee.net</stringProp>
        <stringProp name="HTTPSampler.port">443</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="TestPlan.comments">inmarsat-nonprod-dev.apigee.net</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Timer" elementType="Argument">
            <stringProp name="Argument.name">Timer</stringProp>
            <stringProp name="Argument.value">5000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="APIValidation_CSV Data" enabled="false">
        <stringProp name="filename">C:/Users/moumita mitra/Desktop/API/TestData/ClientId_ClientSecret.CSV</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_ClientId,P_ClientSecret</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ContractMgmt_CustID CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/ContractMgmt_CustId.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_ContractMgmt_CustId</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CustomerMgmt_CustId CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/CustomerManagement_CustId.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_CustId</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CustomerMgmt_FolderId CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/CustomerManagement_FolderId.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_CustMgmt_FolderID</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CustomerMgmt_Type CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/CustomerManagement_Type.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_CustRefType,P_GenRefType</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ResourceMgmt_TPK CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/ResourceManagement_TPK.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_TPK</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ResourceMgmt_SVN CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/API New TestData/ResourceManagement_SVN.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_SVN_CustId,P_SVN_FolderId</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ResourceMgmt_MSISDN CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/API New TestData/ResourceManagement_MSISDN.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_MSISDN_CustId,P_MSISDN_FolderId,P_MSISDN_MSISDN</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">\t</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ResourceMgmt_IMSI CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/API New TestData/ResourceManagement_IMSI.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_IMSI_CustId,P_IMSI_FolderId,P_IMSI_IMSI</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">\t</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="PdtInventoryMgmt_CustId CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/PdtInvManagement_CustId.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_PdtInv_CustId</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="PdtInventoryMgmt_QueryProduct CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/PdtInvManagement_QueryProduct.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_DestFolderId,P_QCustId</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="PdtInventoryMgmt_SiteId CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/PdtInvManagement_SiteId.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_SiteId</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="PdtInventoryMgmt_PrdID CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/PdtInvManagement_PrdId.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_ProductId</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CatalogMgmt_QueryProduct CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/CatalogManagement_QueryPdt.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_CatalogMgmt_FolderID,P_CatalogMgmt_ContractID</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CatalogMgmt_QuerySubscription CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/CatalogManagement_QuerySubscription.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_CatalogMgmt_SPoID,P_CatalogMgmt_SFolderID</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="&lt;Disabled&gt;UserManagement_Userid CSV Data File" enabled="false">
        <stringProp name="filename">C:/Users/moumita mitra/Desktop/API/TestData/UserManagement_UserId.CSV</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_Userid</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <stringProp name="TestPlan.comments">List of USer IDs</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Usermanagement_Fid_Cid CSV Data File" enabled="true">
        <stringProp name="filename">C:/Users/Nimesh.Mendez/Desktop/API/Drop 1.05.1.23_DMLoading/API New TestData/Usermanagement_Fid_Cid.CSV</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_fid,P_cid</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="PdtOrderMgmt_OrderId CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/PdtOrderManagement_OrderId.CSV</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_CommercialOrderID</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Terminate_PdtOrderMgmt_PrdInstantId" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/PdtOrderMgt_ProductInstantId.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_ProductInstantId</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="PdtOrderMgmt_DestFolderId CSV Data" enabled="true">
        <stringProp name="filename">C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/API New TestData/P_OrderMgmt_DestFolderId.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_OrderMgmt_DestFolderId</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="PdtOrderMgmt_CustId CSV Data" enabled="false">
        <stringProp name="filename">C:/Users/moumita mitra/Desktop/API/TestData/ManualTask_CustId.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_ManualTask_CustId</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Name-Counter" enabled="true">
        <stringProp name="CounterConfig.start">1200</stringProp>
        <stringProp name="CounterConfig.end">8000</stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">P_Name</stringProp>
        <stringProp name="CounterConfig.format"></stringProp>
        <boolProp name="CounterConfig.per_user">false</boolProp>
      </CounterConfig>
      <hashTree/>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Num-Counter" enabled="true">
        <stringProp name="CounterConfig.start">1200</stringProp>
        <stringProp name="CounterConfig.end">8250</stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">P_Num</stringProp>
        <stringProp name="CounterConfig.format"></stringProp>
        <boolProp name="CounterConfig.per_user">false</boolProp>
      </CounterConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test_ProductOrderManagement_OrderJourney_R1.05.1.23" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">inmarsat-nonprod-stage.apigee.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Partner Implementation</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa69gpvsEkOFrQLU0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">toBRfLsEsMVZMnIeMdUrEqcsf30hZBBcHE3L2jKM</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">0oa6bj1ltdWyVPRnp0x6</stringProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderSubmission_GxUSG" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalProjectId&quot;: &quot;5001&quot;,&#xd;
    &quot;externalOrderId&quot;: &quot;5001&quot;,&#xd;
    &quot;marketSector&quot;: &quot;Government Aeronautical Sector (USG)&quot;,&#xd;
    &quot;destinationFolderId&quot;: &quot;FO-0000002469&quot;,&#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Acquisition&quot;,&#xd;
        &quot;modifyOrderType&quot;: &quot;Not Applicable&quot;,&#xd;
        &quot;siteId&quot;: &quot;33815&quot;,&#xd;
        &quot;contractId&quot;: &quot;1234556&quot;,&#xd;
        &quot;billingAccountId&quot;: &quot;11004433&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;action&quot;: &quot;Add&quot;,&#xd;
            &quot;id&quot;: &quot;PO_000073&quot;,&#xd;
            &quot;characteristic&quot;: [&#xd;
              {&#xd;
                &quot;name&quot;: &quot;Home PoP&quot;,&#xd;
                &quot;value&quot;: &quot;Amsterdam&quot;&#xd;
              }&#xd;
            ],&#xd;
            &quot;productItem&quot;: [&#xd;
              {&#xd;
                &quot;action&quot;: &quot;Add&quot;,&#xd;
                &quot;id&quot;: &quot;PS_000141&quot;,&#xd;
                &quot;characteristic&quot;: [&#xd;
                  {&#xd;
                    &quot;name&quot;: &quot;name&quot;,&#xd;
                    &quot;value&quot;: &quot;GX Configuration&quot;&#xd;
                  }&#xd;
                ],&#xd;
                &quot;productItem&quot;: [&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000662&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;Service Delivery Point&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Remote Site Name&quot;,&#xd;
                        &quot;value&quot;: &quot;Rsite&quot;&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000249&quot;&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000045&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;GX&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Geographical Regionality&quot;,&#xd;
                        &quot;value&quot;: &quot;Global&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;1536&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;10240&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;512&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;2048&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;SLA (%)&quot;,&#xd;
                        &quot;value&quot;: &quot;99.5&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period Unit&quot;,&#xd;
                        &quot;value&quot;: &quot;Monthly&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period&quot;,&#xd;
                        &quot;value&quot;: &quot;12&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Subscription Plan Type&quot;,&#xd;
                        &quot;value&quot;: &quot;Aeronautical - Gemini&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Level&quot;,&#xd;
                        &quot;value&quot;: &quot;Standard&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Terminal Group/Class&quot;,&#xd;
                        &quot;value&quot;: &quot;Class A&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Meet Me Point&quot;,&#xd;
                        &quot;value&quot;: &quot;Amsterdam&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Traffic Service Level&quot;,&#xd;
                        &quot;value&quot;: &quot;TSL02&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;80&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance Carry Over (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;40&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000120&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Satellite Terminal&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Active Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Backup Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000632&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;name&quot;,&#xd;
                                &quot;value&quot;: &quot;South&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Type&quot;,&#xd;
                                &quot;value&quot;: &quot;South&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Type&quot;,&#xd;
                                &quot;value&quot;: &quot;West&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Degrees&quot;,&#xd;
                                &quot;value&quot;: &quot;12&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Minutes&quot;,&#xd;
                                &quot;value&quot;: &quot;23&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Seconds&quot;,&#xd;
                                &quot;value&quot;: &quot;23&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Degrees&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Minutes&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Seconds&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              }&#xd;
                            ]&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000166&quot;,&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000169&quot;,&#xd;
                                &quot;productItem&quot;: [&#xd;
                                  {&#xd;
                                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                                    &quot;id&quot;: &quot;TPS_000243&quot;,&#xd;
                                    &quot;characteristic&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Terminal Provisioning Key&quot;,&#xd;
                                        &quot;value&quot;: &quot;CQAFBDCUVSCC6===&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Stats Management Profile&quot;,&#xd;
                                        &quot;value&quot;: &quot;standard&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;productItem&quot;: [&#xd;
                                      {&#xd;
                                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                                        &quot;id&quot;: &quot;PS_000534&quot;,&#xd;
                                        &quot;characteristic&quot;: [&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Portswitchnumber&quot;,&#xd;
                                            &quot;value&quot;: &quot;Port2&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Autonegotiation&quot;,&#xd;
                                            &quot;value&quot;: &quot;Y&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Speed&quot;,&#xd;
                                            &quot;value&quot;: &quot;100Mbps&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Mode&quot;,&#xd;
                                            &quot;value&quot;: &quot;HalfDuplex&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Tagenable&quot;,&#xd;
                                            &quot;value&quot;: &quot;N&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;SVN List&quot;,&#xd;
                                            &quot;value&quot;: &quot;5001&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Enable Trunk&quot;,&#xd;
                                            &quot;value&quot;: &quot;N&quot;&#xd;
                                          }&#xd;
                                        ]&#xd;
                                      }&#xd;
                                    ]&#xd;
                                  }&#xd;
                                ]&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000509&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Corporate SVN &quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;SVN Number&quot;,&#xd;
                            &quot;value&quot;: &quot;5001&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;ETH0 IP Prefix&quot;,&#xd;
                            &quot;value&quot;: &quot;192.168.110.1&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;ETH0 Subnet Mask&quot;,&#xd;
                            &quot;value&quot;: &quot;255.255.255.248&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000635&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;MD5authPasswd&quot;,&#xd;
                                &quot;value&quot;: &quot;123213&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Remote Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.1.23.123&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Remote AS&quot;,&#xd;
                                &quot;value&quot;: &quot;123&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;BGP Send Recv&quot;,&#xd;
                                &quot;value&quot;: &quot;Recevie(1)&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;OTA BGP Peer&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Redistribute Connected Routes into BGP&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Redistribute Static Routes into BGP&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              }&#xd;
                            ]&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000516&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout Interface&quot;,&#xd;
                                &quot;value&quot;: &quot;eth0&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Address&quot;,&#xd;
                                &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Gateway&quot;,&#xd;
                                &quot;value&quot;: &quot;10.22.111.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Netmask&quot;,&#xd;
                                &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000513&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Primary Global DNS Server IP Address&quot;,&#xd;
                                &quot;value&quot;: &quot;10.22.111.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Primary Global DNS Server Name&quot;,&#xd;
                                &quot;value&quot;: &quot;TestServer&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Secondary Global DNS Server IP Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.232.12.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Secondary Global DNS Server Name&quot;,&#xd;
                                &quot;value&quot;: &quot;TestServer&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000514&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NATPAT Timeout&quot;,&#xd;
                                &quot;value&quot;: &quot;10&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Enable&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;10.23.324.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Protocol&quot;,&#xd;
                                &quot;value&quot;: &quot;AH&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Local Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.243.23.221&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Local Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;10.23.324.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session NAT Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;12.23.123.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Protocol&quot;,&#xd;
                                &quot;value&quot;: &quot;AH&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;SIPALG Table Enable&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;SIPALG Table Port&quot;,&#xd;
                                &quot;value&quot;: &quot;123&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000510&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;DHCP Mode&quot;,&#xd;
                                &quot;value&quot;: &quot;DHCPRelay&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000523&quot;,&#xd;
                                &quot;characteristic&quot;: [&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;name&quot;,&#xd;
                                    &quot;value&quot;: &quot;DHCP_Relay&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Primary Local DNS Server IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.2&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Secondary Local DNS Server IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.3&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay to IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.6&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay Subnet IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.5&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay Subnet Mask&quot;,&#xd;
                                    &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                                  }&#xd;
                                ],&#xd;
                                &quot;productItem&quot;: []&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      }&#xd;
                    ]&#xd;
                  }&#xd;
                ]&#xd;
              }&#xd;
            ]&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">USG (Gx Only)</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.23/USG_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderSubmission_GxESS" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalProjectId&quot;: &quot;6001&quot;,&#xd;
    &quot;externalOrderId&quot;: &quot;6001&quot;,&#xd;
    &quot;marketSector&quot;: &quot;Enterprise Energy&quot;,&#xd;
    &quot;destinationFolderId&quot;: &quot;FO-0000001149&quot;,&#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Acquisition&quot;,&#xd;
        &quot;modifyOrderType&quot;: &quot;Not Applicable&quot;,&#xd;
        &quot;siteId&quot;: &quot;32475&quot;,&#xd;
        &quot;contractId&quot;: &quot;1234&quot;,&#xd;
        &quot;billingAccountId&quot;: &quot;1043&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;action&quot;: &quot;Add&quot;,&#xd;
            &quot;id&quot;: &quot;PO_000075&quot;,&#xd;
            &quot;characteristic&quot;: [&#xd;
              {&#xd;
                &quot;name&quot;: &quot;name&quot;,&#xd;
                &quot;value&quot;: &quot;GX ESS&quot;&#xd;
              }&#xd;
            ],&#xd;
            &quot;productItem&quot;: [&#xd;
              {&#xd;
                &quot;action&quot;: &quot;Add&quot;,&#xd;
                &quot;id&quot;: &quot;PS_000141&quot;,&#xd;
                &quot;characteristic&quot;: [&#xd;
                  {&#xd;
                    &quot;name&quot;: &quot;name&quot;,&#xd;
                    &quot;value&quot;: &quot;GX Configuration&quot;&#xd;
                  }&#xd;
                ],&#xd;
                &quot;productItem&quot;: [&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000662&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;Service Delivery Point&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Remote Site Name&quot;,&#xd;
                        &quot;value&quot;: &quot;TPtest1&quot;&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000249&quot;&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000045&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;GX&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Geographical Regionality&quot;,&#xd;
                        &quot;value&quot;: &quot;Global&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;128&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;2048&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;16&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;256&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;SLA (%)&quot;,&#xd;
                        &quot;value&quot;: &quot;95&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period Unit&quot;,&#xd;
                        &quot;value&quot;: &quot;Monthly&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period&quot;,&#xd;
                        &quot;value&quot;: &quot;12&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Subscription Plan Type&quot;,&#xd;
                        &quot;value&quot;: &quot;Bronze&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Level&quot;,&#xd;
                        &quot;value&quot;: &quot;Standard&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Terminal Group/Class&quot;,&#xd;
                        &quot;value&quot;: &quot;Group 1&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Meet Me Point&quot;,&#xd;
                        &quot;value&quot;: &quot;Amsterdam&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Traffic Service Level&quot;,&#xd;
                        &quot;value&quot;: &quot;TSL03&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance Carry Over (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000120&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Satellite Terminal&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Active Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.4-86.pkg&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Backup Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.2-58.pkg&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000166&quot;,&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000168&quot;,&#xd;
                                &quot;productItem&quot;: [&#xd;
                                  {&#xd;
                                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                                    &quot;id&quot;: &quot;TPS_000180&quot;,&#xd;
                                    &quot;characteristic&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Terminal Provisioning Key&quot;,&#xd;
                                        &quot;value&quot;: &quot;CQAFBDCUVSCC6===&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Stats Management Profile&quot;,&#xd;
                                        &quot;value&quot;: &quot;standard&quot;&#xd;
                                      },&#xd;
				      {&#xd;
                                        &quot;name&quot;: &quot;Manufacturer&quot;,&#xd;
                                        &quot;value&quot;: &quot;Intellian&quot;&#xd;
                                      },&#xd;
				      {&#xd;
                                        &quot;name&quot;: &quot;Terminal Type&quot;,&#xd;
                                        &quot;value&quot;: &quot;INT-MAR-SCM-1000238&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;productItem&quot;: [&#xd;
                                      {&#xd;
                                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                                        &quot;id&quot;: &quot;PS_000534&quot;,&#xd;
                                        &quot;characteristic&quot;: [&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Portswitchnumber&quot;,&#xd;
                                            &quot;value&quot;: &quot;Port2&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Autonegotiation&quot;,&#xd;
                                            &quot;value&quot;: &quot;Y&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Speed&quot;,&#xd;
                                            &quot;value&quot;: &quot;100Mbps&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Mode&quot;,&#xd;
                                            &quot;value&quot;: &quot;HalfDuplex&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Tagenable&quot;,&#xd;
                                            &quot;value&quot;: &quot;N&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;SVN List&quot;,&#xd;
                                            &quot;value&quot;: &quot;712&quot;&#xd;
                                          }&#xd;
                                        ]&#xd;
                                      }&#xd;
                                    ]&#xd;
                                  }&#xd;
                                ]&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000509&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Corporate SVN &quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;SVN Number&quot;,&#xd;
                            &quot;value&quot;: &quot;712&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;ETH0 IP Prefix&quot;,&#xd;
                            &quot;value&quot;: &quot;192.168.110.1&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;ETH0 Subnet Mask&quot;,&#xd;
                            &quot;value&quot;: &quot;255.255.255.248&quot;&#xd;
                          }&#xd;
                        ]&#xd;
                      }&#xd;
                    ]&#xd;
                  }&#xd;
                ]&#xd;
              }&#xd;
            ]&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">ESS (Gx Only)</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.23/ESS_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderSubmission_GxGSS" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalProjectId&quot;: &quot;9091&quot;,&#xd;
    &quot;externalOrderId&quot;: &quot;3313&quot;,&#xd;
    &quot;marketSector&quot;: &quot;Government Land&quot;,&#xd;
    &quot;destinationFolderId&quot;: &quot;FO-0000003224&quot;,&#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Acquisition&quot;,&#xd;
        &quot;modifyOrderType&quot;: &quot;Not Applicable&quot;,&#xd;
        &quot;siteId&quot;: &quot;26560&quot;,&#xd;
        &quot;contractId&quot;: &quot;15-6189&quot;,&#xd;
        &quot;billingAccountId&quot;: &quot;10659&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;action&quot;: &quot;Add&quot;,&#xd;
            &quot;id&quot;: &quot;PO_000071&quot;,&#xd;
            &quot;characteristic&quot;: [&#xd;
              {&#xd;
                &quot;name&quot;: &quot;&quot;,&#xd;
                &quot;value&quot;: &quot;GX GSS&quot;&#xd;
              }&#xd;
            ],&#xd;
            &quot;productItem&quot;: [&#xd;
              {&#xd;
                &quot;action&quot;: &quot;Add&quot;,&#xd;
                &quot;id&quot;: &quot;PS_000141&quot;,&#xd;
                &quot;characteristic&quot;: [&#xd;
                  {&#xd;
                    &quot;name&quot;: &quot;name&quot;,&#xd;
                    &quot;value&quot;: &quot;GX Configuration&quot;&#xd;
                  }&#xd;
                ],&#xd;
                &quot;productItem&quot;: [&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000662&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;Service Delivery Point&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Remote Site Name&quot;,&#xd;
                        &quot;value&quot;: &quot;TestSite&quot;&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000249&quot;&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000045&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;GX&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Geographical Regionality&quot;,&#xd;
                        &quot;value&quot;: &quot;Global&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;768&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;3072&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;384&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;1536&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;SLA (%)&quot;,&#xd;
                        &quot;value&quot;: &quot;95&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period Unit&quot;,&#xd;
                        &quot;value&quot;: &quot;Monthly&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period&quot;,&#xd;
                        &quot;value&quot;: &quot;12&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Subscription Plan Type&quot;,&#xd;
                        &quot;value&quot;: &quot;Gold&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Level&quot;,&#xd;
                        &quot;value&quot;: &quot;Standard&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Terminal Group/Class&quot;,&#xd;
                        &quot;value&quot;: &quot;Group 1&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Meet Me Point&quot;,&#xd;
                        &quot;value&quot;: &quot;Amsterdam&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Traffic Service Level&quot;,&#xd;
                        &quot;value&quot;: &quot;TSL01&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance Carry Over (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000120&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Satellite Terminal&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Active Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.4-86.pkg&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Backup Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.2-58.pkg&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000632&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;name&quot;,&#xd;
                                &quot;value&quot;: &quot;South&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Type&quot;,&#xd;
                                &quot;value&quot;: &quot;South&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Type&quot;,&#xd;
                                &quot;value&quot;: &quot;West&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Degrees&quot;,&#xd;
                                &quot;value&quot;: &quot;12&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Minutes&quot;,&#xd;
                                &quot;value&quot;: &quot;23&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Seconds&quot;,&#xd;
                                &quot;value&quot;: &quot;23&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Degrees&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Minutes&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Seconds&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              }&#xd;
                            ]&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000166&quot;,&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000168&quot;,&#xd;
                                &quot;productItem&quot;: [&#xd;
                                  {&#xd;
                                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                                    &quot;id&quot;: &quot;TPS_000180&quot;,&#xd;
                                    &quot;characteristic&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Terminal Provisioning Key&quot;,&#xd;
                                        &quot;value&quot;: &quot;CQAFBDCUVSCC6===&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Stats Management Profile&quot;,&#xd;
                                        &quot;value&quot;: &quot;standard&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;productItem&quot;: [&#xd;
                                      {&#xd;
                                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                                        &quot;id&quot;: &quot;PS_000534&quot;,&#xd;
                                        &quot;characteristic&quot;: [&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Portswitchnumber&quot;,&#xd;
                                            &quot;value&quot;: &quot;Port5&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Autonegotiation&quot;,&#xd;
                                            &quot;value&quot;: &quot;Y&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Speed&quot;,&#xd;
                                            &quot;value&quot;: &quot;100Mbps&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Mode&quot;,&#xd;
                                            &quot;value&quot;: &quot;HalfDuplex&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Tagenable&quot;,&#xd;
                                            &quot;value&quot;: &quot;N&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;SVN List&quot;,&#xd;
                                            &quot;value&quot;: &quot;1288&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Enable Trunk&quot;,&#xd;
                                            &quot;value&quot;: &quot;Y&quot;&#xd;
                                          }&#xd;
                                        ]&#xd;
                                      }&#xd;
                                    ]&#xd;
                                  }&#xd;
                                ]&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000509&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Corporate SVN &quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;SVN Number&quot;,&#xd;
                            &quot;value&quot;: &quot;1290&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;ETH0 IP Prefix&quot;,&#xd;
                            &quot;value&quot;: &quot;10.22.11.22&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;ETH0 Subnet Mask&quot;,&#xd;
                            &quot;value&quot;: &quot;12.232.12.21&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000635&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;MD5authPasswd&quot;,&#xd;
                                &quot;value&quot;: &quot;123213&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Remote Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.1.23.123&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Remote AS&quot;,&#xd;
                                &quot;value&quot;: &quot;123&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;BGP Send Recv&quot;,&#xd;
                                &quot;value&quot;: &quot;Recevie(1)&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;OTA BGP Peer&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Redistribute Connected Routes into BGP&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Redistribute Static Routes into BGP&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              }&#xd;
                            ]&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000516&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout Interface&quot;,&#xd;
                                &quot;value&quot;: &quot;eth0&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Address&quot;,&#xd;
                                &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Gateway&quot;,&#xd;
                                &quot;value&quot;: &quot;10.22.111.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Netmask&quot;,&#xd;
                                &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000513&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Primary Global DNS Server IP Address&quot;,&#xd;
                                &quot;value&quot;: &quot;10.22.111.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Primary Global DNS Server Name&quot;,&#xd;
                                &quot;value&quot;: &quot;TestServer&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Secondary Global DNS Server IP Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.232.12.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Secondary Global DNS Server Name&quot;,&#xd;
                                &quot;value&quot;: &quot;TestServer&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000514&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NATPAT Timeout&quot;,&#xd;
                                &quot;value&quot;: &quot;10&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Enable&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;10.23.324.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Protocol&quot;,&#xd;
                                &quot;value&quot;: &quot;AH&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Local Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.243.23.221&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Local Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;10.23.324.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session NAT Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;12.23.123.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Protocol&quot;,&#xd;
                                &quot;value&quot;: &quot;AH&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;SIPALG Table Enable&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;SIPALG Table Port&quot;,&#xd;
                                &quot;value&quot;: &quot;123&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000510&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;DHCP Mode&quot;,&#xd;
                                &quot;value&quot;: &quot;DHCPRelay&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000523&quot;,&#xd;
                                &quot;characteristic&quot;: [&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;name&quot;,&#xd;
                                    &quot;value&quot;: &quot;DHCP_Relay&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Primary Local DNS Server IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.2&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Secondary Local DNS Server IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.3&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay to IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.6&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay Subnet IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.5&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay Subnet Mask&quot;,&#xd;
                                    &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                                  }&#xd;
                                ],&#xd;
                                &quot;productItem&quot;: []&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      }&#xd;
                    ]&#xd;
                  }&#xd;
                ]&#xd;
              }&#xd;
            ]&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">GSS (Gx Only)</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.22/GSS_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderSubmission_GxGSS_new" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalProjectId&quot;: &quot;9091&quot;,&#xd;
    &quot;externalOrderId&quot;: &quot;3313&quot;,&#xd;
    &quot;marketSector&quot;: &quot;Government Land&quot;,&#xd;
    &quot;destinationFolderId&quot;: &quot;FO-0000004588&quot;,&#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Acquisition&quot;,&#xd;
        &quot;modifyOrderType&quot;: &quot;Not Applicable&quot;,&#xd;
        &quot;siteId&quot;: &quot;35145&quot;,&#xd;
        &quot;contractId&quot;: &quot;1234&quot;,&#xd;
        &quot;billingAccountId&quot;: &quot;1043&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;action&quot;: &quot;Add&quot;,&#xd;
            &quot;id&quot;: &quot;PO_000071&quot;,&#xd;
            &quot;characteristic&quot;: [&#xd;
              {&#xd;
                &quot;name&quot;: &quot;&quot;,&#xd;
                &quot;value&quot;: &quot;GX GSS&quot;&#xd;
              }&#xd;
            ],&#xd;
            &quot;productItem&quot;: [&#xd;
              {&#xd;
                &quot;action&quot;: &quot;Add&quot;,&#xd;
                &quot;id&quot;: &quot;PS_000141&quot;,&#xd;
                &quot;characteristic&quot;: [&#xd;
                  {&#xd;
                    &quot;name&quot;: &quot;name&quot;,&#xd;
                    &quot;value&quot;: &quot;GX Configuration&quot;&#xd;
                  }&#xd;
                ],&#xd;
                &quot;productItem&quot;: [&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000662&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;Service Delivery Point&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Remote Site Name&quot;,&#xd;
                        &quot;value&quot;: &quot;TestSite&quot;&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000249&quot;&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000045&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;GX&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Geographical Regionality&quot;,&#xd;
                        &quot;value&quot;: &quot;Global&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;768&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;3072&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;384&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;1536&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;SLA (%)&quot;,&#xd;
                        &quot;value&quot;: &quot;95&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period Unit&quot;,&#xd;
                        &quot;value&quot;: &quot;Monthly&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period&quot;,&#xd;
                        &quot;value&quot;: &quot;12&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Subscription Plan Type&quot;,&#xd;
                        &quot;value&quot;: &quot;Gold&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Level&quot;,&#xd;
                        &quot;value&quot;: &quot;Standard&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Terminal Group/Class&quot;,&#xd;
                        &quot;value&quot;: &quot;Group 1&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Meet Me Point&quot;,&#xd;
                        &quot;value&quot;: &quot;Amsterdam&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Traffic Service Level&quot;,&#xd;
                        &quot;value&quot;: &quot;TSL01&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance Carry Over (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000120&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Satellite Terminal&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Active Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.4-86.pkg&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Backup Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.2-58.pkg&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000632&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;name&quot;,&#xd;
                                &quot;value&quot;: &quot;South&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Type&quot;,&#xd;
                                &quot;value&quot;: &quot;South&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Type&quot;,&#xd;
                                &quot;value&quot;: &quot;West&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Degrees&quot;,&#xd;
                                &quot;value&quot;: &quot;12&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Minutes&quot;,&#xd;
                                &quot;value&quot;: &quot;23&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Seconds&quot;,&#xd;
                                &quot;value&quot;: &quot;23&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Degrees&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Minutes&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Seconds&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              }&#xd;
                            ]&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000166&quot;,&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000168&quot;,&#xd;
                                &quot;productItem&quot;: [&#xd;
                                  {&#xd;
                                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                                    &quot;id&quot;: &quot;TPS_000180&quot;,&#xd;
                                    &quot;characteristic&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Terminal Provisioning Key&quot;,&#xd;
                                        &quot;value&quot;: &quot;CQAFBDCUVSCC6===&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Stats Management Profile&quot;,&#xd;
                                        &quot;value&quot;: &quot;standard&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;productItem&quot;: [&#xd;
                                      {&#xd;
                                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                                        &quot;id&quot;: &quot;PS_000534&quot;,&#xd;
                                        &quot;characteristic&quot;: [&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Portswitchnumber&quot;,&#xd;
                                            &quot;value&quot;: &quot;Port5&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Autonegotiation&quot;,&#xd;
                                            &quot;value&quot;: &quot;Y&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Speed&quot;,&#xd;
                                            &quot;value&quot;: &quot;100Mbps&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Mode&quot;,&#xd;
                                            &quot;value&quot;: &quot;HalfDuplex&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Tagenable&quot;,&#xd;
                                            &quot;value&quot;: &quot;N&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;SVN List&quot;,&#xd;
                                            &quot;value&quot;: &quot;1104&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Enable Trunk&quot;,&#xd;
                                            &quot;value&quot;: &quot;Y&quot;&#xd;
                                          }&#xd;
                                        ]&#xd;
                                      }&#xd;
                                    ]&#xd;
                                  }&#xd;
                                ]&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000509&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Corporate SVN &quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;SVN Number&quot;,&#xd;
                            &quot;value&quot;: &quot;1104&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;ETH0 IP Prefix&quot;,&#xd;
                            &quot;value&quot;: &quot;10.22.11.22&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;ETH0 Subnet Mask&quot;,&#xd;
                            &quot;value&quot;: &quot;12.232.12.21&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000635&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;MD5authPasswd&quot;,&#xd;
                                &quot;value&quot;: &quot;123213&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Remote Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.1.23.123&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Remote AS&quot;,&#xd;
                                &quot;value&quot;: &quot;123&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;BGP Send Recv&quot;,&#xd;
                                &quot;value&quot;: &quot;Recevie(1)&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;OTA BGP Peer&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Redistribute Connected Routes into BGP&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Redistribute Static Routes into BGP&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              }&#xd;
                            ]&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000516&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout Interface&quot;,&#xd;
                                &quot;value&quot;: &quot;eth0&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Address&quot;,&#xd;
                                &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Gateway&quot;,&#xd;
                                &quot;value&quot;: &quot;10.22.111.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Netmask&quot;,&#xd;
                                &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000513&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Primary Global DNS Server IP Address&quot;,&#xd;
                                &quot;value&quot;: &quot;10.22.111.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Primary Global DNS Server Name&quot;,&#xd;
                                &quot;value&quot;: &quot;TestServer&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Secondary Global DNS Server IP Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.232.12.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Secondary Global DNS Server Name&quot;,&#xd;
                                &quot;value&quot;: &quot;TestServer&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000514&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NATPAT Timeout&quot;,&#xd;
                                &quot;value&quot;: &quot;10&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Enable&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;10.23.324.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Protocol&quot;,&#xd;
                                &quot;value&quot;: &quot;AH&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Local Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.243.23.221&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Local Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;10.23.324.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session NAT Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;12.23.123.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Protocol&quot;,&#xd;
                                &quot;value&quot;: &quot;AH&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;SIPALG Table Enable&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;SIPALG Table Port&quot;,&#xd;
                                &quot;value&quot;: &quot;123&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000510&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;DHCP Mode&quot;,&#xd;
                                &quot;value&quot;: &quot;DHCPRelay&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000523&quot;,&#xd;
                                &quot;characteristic&quot;: [&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;name&quot;,&#xd;
                                    &quot;value&quot;: &quot;DHCP_Relay&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Primary Local DNS Server IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.2&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Secondary Local DNS Server IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.3&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay to IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.6&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay Subnet IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.5&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay Subnet Mask&quot;,&#xd;
                                    &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                                  }&#xd;
                                ],&#xd;
                                &quot;productItem&quot;: []&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      }&#xd;
                    ]&#xd;
                  }&#xd;
                ]&#xd;
              }&#xd;
            ]&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">GSS (Gx Only)</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 //FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.22/GSS_OrderID.csv&quot;, true);
 FileWriter fstream = new FileWriter(&quot;C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/GSS_Orders_testdata/GSS_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();

 </stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderSubmission_Gx+FleetXpress" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalProjectId&quot;: &quot;5010&quot;,&#xd;
    &quot;externalOrderId&quot;: &quot;5010&quot;,&#xd;
    &quot;marketSector&quot;: &quot;Commercial Maritime&quot;,&#xd;
    &quot;destinationFolderId&quot;: &quot;FO-0000001150&quot;,&#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Acquisition&quot;,&#xd;
        &quot;modifyOrderType&quot;: &quot;Not Applicable&quot;,&#xd;
        &quot;siteId&quot;: &quot;32476&quot;,&#xd;
        &quot;contractId&quot;: &quot;123&quot;,&#xd;
        &quot;billingAccountId&quot;: &quot;4114&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;action&quot;: &quot;Add&quot;,&#xd;
            &quot;id&quot;: &quot;PO_000080&quot;,&#xd;
            &quot;characteristic&quot;: [&#xd;
              {&#xd;
                &quot;name&quot;: &quot;Product Name&quot;,&#xd;
                &quot;value&quot;: &quot;Fleet Xpress&quot;&#xd;
              }&#xd;
            ],&#xd;
            &quot;productItem&quot;: [&#xd;
              {&#xd;
                &quot;action&quot;: &quot;Add&quot;,&#xd;
                &quot;id&quot;: &quot;PS_000141&quot;,&#xd;
                &quot;characteristic&quot;: [&#xd;
                  {&#xd;
                    &quot;name&quot;: &quot;name&quot;,&#xd;
                    &quot;value&quot;: &quot;GX Configuration&quot;&#xd;
                  }&#xd;
                ],&#xd;
                &quot;productItem&quot;: [&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000662&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;Service Delivery Point&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Remote Site Name&quot;,&#xd;
                        &quot;value&quot;: &quot;TestSite&quot;&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000249&quot;&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000045&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;GX&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Geographical Regionality&quot;,&#xd;
                        &quot;value&quot;: &quot;Global&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;128&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;2048&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;32&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;512&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;SLA (%)&quot;,&#xd;
                        &quot;value&quot;: &quot;95&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period Unit&quot;,&#xd;
                        &quot;value&quot;: &quot;Monthly&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period&quot;,&#xd;
                        &quot;value&quot;: &quot;36&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Subscription Plan Type&quot;,&#xd;
                        &quot;value&quot;: &quot;Asymmetrical&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Level&quot;,&#xd;
                        &quot;value&quot;: &quot;Standard&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Terminal Group/Class&quot;,&#xd;
                        &quot;value&quot;: &quot;100cm&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Meet Me Point&quot;,&#xd;
                        &quot;value&quot;: &quot;Amsterdam&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Traffic Service Level&quot;,&#xd;
                        &quot;value&quot;: &quot;TSL03&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance Carry Over (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000120&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Satellite Terminal&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Active Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.4-86.pkg&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Backup Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.2-58.pkg&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000166&quot;,&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000167&quot;,&#xd;
                                &quot;productItem&quot;: [&#xd;
                                  {&#xd;
                                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                                    &quot;id&quot;: &quot;TPS_000562&quot;,&#xd;
                                    &quot;characteristic&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Terminal Provisioning Key&quot;,&#xd;
                                        &quot;value&quot;: &quot;CQAFOCMIXXPPW===&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Stats Management Profile&quot;,&#xd;
                                        &quot;value&quot;: &quot;standard&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;productItem&quot;: []&#xd;
                                  }&#xd;
                                ]&#xd;
                              }&#xd;
                            ]&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000632&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;name&quot;,&#xd;
                                &quot;value&quot;: &quot;South&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Type&quot;,&#xd;
                                &quot;value&quot;: &quot;South&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Type&quot;,&#xd;
                                &quot;value&quot;: &quot;West&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Degrees&quot;,&#xd;
                                &quot;value&quot;: &quot;12&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Minutes&quot;,&#xd;
                                &quot;value&quot;: &quot;23&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Seconds&quot;,&#xd;
                                &quot;value&quot;: &quot;23&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Degrees&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Minutes&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Seconds&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000140&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;IMSI&quot;,&#xd;
                        &quot;value&quot;: &quot;901111212992000&quot;&#xd;
                      },&#xd;
		      {&#xd;
			&quot;name&quot;: &quot;Phone Number&quot;,&#xd;
                        &quot;value&quot;: &quot;+870789901454&quot;&#xd;
		      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000145&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;BGAN Terminal Type&quot;,&#xd;
                            &quot;value&quot;: &quot;Furuno FBB500&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: []&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000620&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;Fax&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: []&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000134&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;GX Voice&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Phone Number Allocation&quot;,&#xd;
                        &quot;value&quot;: &quot;Manual&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;VLAN ID&quot;,&#xd;
                        &quot;value&quot;: &quot;1298&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000135&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GlobalXpress Base VoIP Line&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Number Type&quot;,&#xd;
                            &quot;value&quot;: &quot;Inmarsat&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;National Number Country&quot;,&#xd;
                            &quot;value&quot;: &quot;Inmarsat&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Phone Number Domain&quot;,&#xd;
                            &quot;value&quot;: &quot;New York&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Locale&quot;,&#xd;
                            &quot;value&quot;: &quot;English (UK)&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Second Locale&quot;,&#xd;
                            &quot;value&quot;: &quot;French (Canadian)&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Individual Line Indicator&quot;,&#xd;
                            &quot;value&quot;: &quot;N&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Instance Number&quot;,&#xd;
                            &quot;value&quot;: &quot;+000000000001&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: []&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000132&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GlobalXpress Extended VoIP Line&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Number Type&quot;,&#xd;
                            &quot;value&quot;: &quot;Inmarsat&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;National Number Country&quot;,&#xd;
                            &quot;value&quot;: &quot;Inmarsat&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Phone Number Domain&quot;,&#xd;
                            &quot;value&quot;: &quot;New York&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Locale&quot;,&#xd;
                            &quot;value&quot;: &quot;English (UK)&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Second Locale&quot;,&#xd;
                            &quot;value&quot;: &quot;French (Canadian)&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Individual Line Indicator&quot;,&#xd;
                            &quot;value&quot;: &quot;N&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Instance Number&quot;,&#xd;
                            &quot;value&quot;: &quot;+000000000002&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: []&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000138&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;Network Service Device&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;NSD Type&quot;,&#xd;
                        &quot;value&quot;: &quot;Hard&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000137&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;Cisco 2911&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000600&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;name&quot;,&#xd;
                                &quot;value&quot;: &quot;Multi-8Lan-2Fxs&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Voice Traffic VLAN ID&quot;,&#xd;
                                &quot;value&quot;: &quot;4090&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000394&quot;,&#xd;
                                &quot;characteristic&quot;: [&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;name&quot;,&#xd;
                                    &quot;value&quot;: &quot;NSD Corporate SVN&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;SVN Number&quot;,&#xd;
                                    &quot;value&quot;: &quot;1680&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Loopback Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;8.8.4.4&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DNS Primary IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;8.8.8.8&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;LAN Domain Name&quot;,&#xd;
                                    &quot;value&quot;: &quot;inmarsat.local&quot;&#xd;
                                  }&#xd;
                                ],&#xd;
                                &quot;productItem&quot;: [&#xd;
                                  {&#xd;
                                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                                    &quot;id&quot;: &quot;PS_000395&quot;,&#xd;
                                    &quot;characteristic&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;name&quot;,&#xd;
                                        &quot;value&quot;: &quot;LAN&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;VLAN ID&quot;,&#xd;
                                        &quot;value&quot;: &quot;1298&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;SVN Number&quot;,&#xd;
                                        &quot;value&quot;: &quot;1680&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;DHCP Gateway Address&quot;,&#xd;
                                        &quot;value&quot;: &quot;10.1.1.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;DHCP Pool Mask&quot;,&#xd;
                                        &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;DHCP Pool Address&quot;,&#xd;
                                        &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;productItem&quot;: [&#xd;
                                      {&#xd;
                                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                                        &quot;id&quot;: &quot;PS_000637&quot;,&#xd;
                                        &quot;characteristic&quot;: [&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;name&quot;,&#xd;
                                            &quot;value&quot;: &quot;ACLs&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Action&quot;,&#xd;
                                            &quot;value&quot;: &quot;Permit&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Mask&quot;,&#xd;
                                            &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Prefix&quot;,&#xd;
                                            &quot;value&quot;: &quot;1.1.1.0&quot;&#xd;
                                          }&#xd;
                                        ],&#xd;
                                        &quot;productItem&quot;: []&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                                        &quot;id&quot;: &quot;PS_000638&quot;,&#xd;
                                        &quot;characteristic&quot;: [&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;name&quot;,&#xd;
                                            &quot;value&quot;: &quot;DHCP Exclusion&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;DHCP Exclusion Address Low&quot;,&#xd;
                                            &quot;value&quot;: &quot;12.23.231.23&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;DHCP Exclusion Address High&quot;,&#xd;
                                            &quot;value&quot;: &quot;10.23.123.23&quot;&#xd;
                                          }&#xd;
                                        ],&#xd;
                                        &quot;productItem&quot;: []&#xd;
                                      }&#xd;
                                    ]&#xd;
                                  }&#xd;
                                ]&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000585&quot;,&#xd;
                                &quot;characteristic&quot;: [&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;name&quot;,&#xd;
                                    &quot;value&quot;: &quot;EHWIC Card&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Slot Number&quot;,&#xd;
                                    &quot;value&quot;: &quot;2&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Port 0&quot;,&#xd;
                                    &quot;value&quot;: &quot;1&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Port 1&quot;,&#xd;
                                    &quot;value&quot;: &quot;1&quot;&#xd;
                                  }&#xd;
                                ],&#xd;
                                &quot;productItem&quot;: []&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000246&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;Network Service Device Configuration&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Max Connections&quot;,&#xd;
                            &quot;value&quot;: &quot;2&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Number of BGAN Terminals&quot;,&#xd;
                            &quot;value&quot;: &quot;1&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;SRE Management Corporate SVN&quot;,&#xd;
                            &quot;value&quot;: &quot;1234&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;VAR Management Network Prefix&quot;,&#xd;
                            &quot;value&quot;: &quot;10.12.213.23&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;VAR Management Network Wildcard&quot;,&#xd;
                            &quot;value&quot;: &quot;10.12.213.23&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: []&#xd;
                      }&#xd;
                    ]&#xd;
                  }&#xd;
                ]&#xd;
              }&#xd;
            ]&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">USG (Gx Only)</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.19/Fx_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderSubmission_Gx+G2X" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalProjectId&quot;: &quot;5001&quot;,&#xd;
    &quot;externalOrderId&quot;: &quot;5001&quot;,&#xd;
    &quot;marketSector&quot;: &quot;Government Land&quot;,&#xd;
    &quot;destinationFolderId&quot;: &quot;FO-0000002900&quot;,&#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Acquisition&quot;,&#xd;
        &quot;modifyOrderType&quot;: &quot;Not Applicable&quot;,&#xd;
        &quot;siteId&quot;: &quot;31137&quot;,&#xd;
        &quot;contractId&quot;: &quot;CNT2_RBAC_G2X&quot;,&#xd;
        &quot;billingAccountId&quot;: &quot;261219&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;action&quot;: &quot;Add&quot;,&#xd;
            &quot;id&quot;: &quot;PO_000079&quot;,&#xd;
            &quot;characteristic&quot;: [&#xd;
              {&#xd;
                &quot;name&quot;: &quot;Invoice Frequency&quot;,&#xd;
                &quot;value&quot;: &quot;Monthly&quot;&#xd;
              }&#xd;
            ],&#xd;
            &quot;productItem&quot;: [&#xd;
              {&#xd;
                &quot;action&quot;: &quot;Add&quot;,&#xd;
                &quot;id&quot;: &quot;PS_000141&quot;,&#xd;
                &quot;productItem&quot;: [&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000662&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Remote Site Name&quot;,&#xd;
                        &quot;value&quot;: &quot;TestSite&quot;&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000249&quot;&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000045&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Geographical Regionality&quot;,&#xd;
                        &quot;value&quot;: &quot;Global&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;4096&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;8192&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;4096&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;4096&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;SLA (%)&quot;,&#xd;
                        &quot;value&quot;: &quot;99.5&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Subscription Period&quot;,&#xd;
                        &quot;value&quot;: &quot;Monthly&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period&quot;,&#xd;
                        &quot;value&quot;: &quot;1&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Subscription Plan Type&quot;,&#xd;
                        &quot;value&quot;: &quot;Land and Maritime&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period Unit&quot;,&#xd;
                        &quot;value&quot;: &quot;Monthly&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance Carry Over (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Level&quot;,&#xd;
                        &quot;value&quot;: &quot;Bespoke&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Terminal Group/Class&quot;,&#xd;
                        &quot;value&quot;: &quot;All&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Meet Me Point&quot;,&#xd;
                        &quot;value&quot;: &quot;Amsterdam&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Traffic Service Level&quot;,&#xd;
                        &quot;value&quot;: &quot;TSL01&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000120&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Satellite Terminal&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Active Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.4-86.pkg&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Backup Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.2-58.pkg&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000166&quot;,&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000167&quot;,&#xd;
                                &quot;productItem&quot;: [&#xd;
                                  {&#xd;
                                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                                    &quot;id&quot;: &quot;TPS_000563&quot;,&#xd;
                                    &quot;characteristic&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Terminal Provisioning Key&quot;,&#xd;
                                        &quot;value&quot;: &quot;CQAFBGEUM6SL6===&quot;&#xd;
                                      }&#xd;
                                    ]&#xd;
                                  }&#xd;
                                ]&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000140&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;IMSI&quot;,&#xd;
                        &quot;value&quot;: &quot;901111211992455&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000145&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;BGAN Terminal Type&quot;,&#xd;
                            &quot;value&quot;: &quot;Intellian FB500&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: []&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000620&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;Fax&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: []&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000138&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;NSD Type&quot;,&#xd;
                        &quot;value&quot;: &quot;Hard&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Has Active SVN5&quot;,&#xd;
                        &quot;value&quot;: &quot;N&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000137&quot;,&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000592&quot;,&#xd;
                            &quot;characteristic&quot;: [],&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000394&quot;,&#xd;
                                &quot;characteristic&quot;: [&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;name&quot;,&#xd;
                                    &quot;value&quot;: &quot;NSD Corporate SVN&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;SVN Number&quot;,&#xd;
                                    &quot;value&quot;: &quot;724&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DNS Primary IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;8.8.8.8&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DNS Secondary IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;8.8.4.4&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;LAN Domain Name&quot;,&#xd;
                                    &quot;value&quot;: &quot;inmarsat.local&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Loopback Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;8.8.4.4&quot;&#xd;
                                  }&#xd;
                                ],&#xd;
                                &quot;productItem&quot;: [&#xd;
                                  {&#xd;
                                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                                    &quot;id&quot;: &quot;PS_000395&quot;,&#xd;
                                    &quot;characteristic&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;name&quot;,&#xd;
                                        &quot;value&quot;: &quot;LAN&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;VLAN ID&quot;,&#xd;
                                        &quot;value&quot;: &quot;1298&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;DHCP Gateway Address&quot;,&#xd;
                                        &quot;value&quot;: &quot;10.1.1.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;DHCP Pool Mask&quot;,&#xd;
                                        &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;DHCP Pool Address&quot;,&#xd;
                                        &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;productItem&quot;: [&#xd;
                                      {&#xd;
                                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                                        &quot;id&quot;: &quot;PS_000638&quot;,&#xd;
                                        &quot;characteristic&quot;: [&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;DHCP Exclusion Address High&quot;,&#xd;
                                            &quot;value&quot;: &quot;12.23.231.23&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;DHCP Exclusion Address Low&quot;,&#xd;
                                            &quot;value&quot;: &quot;10.23.123.23&quot;&#xd;
                                          }&#xd;
                                        ]&#xd;
                                      }&#xd;
                                    ]&#xd;
                                  }&#xd;
                                ]&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000585&quot;,&#xd;
                                &quot;characteristic&quot;: [&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;name&quot;,&#xd;
                                    &quot;value&quot;: &quot;EHWIC Card&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Slot Number&quot;,&#xd;
                                    &quot;value&quot;: &quot;1&quot;&#xd;
                                  }&#xd;
                                ],&#xd;
                                &quot;productItem&quot;: []&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000246&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;Network Service Device Configuration&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Max Connections&quot;,&#xd;
                            &quot;value&quot;: &quot;101&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Number of BGAN Terminals&quot;,&#xd;
                            &quot;value&quot;: &quot;1&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;SRE Management Corporate SVN&quot;,&#xd;
                            &quot;value&quot;: &quot;1234&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;VAR Management Network Prefix&quot;,&#xd;
                            &quot;value&quot;: &quot;10.12.213.23&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;VAR Management Network Wildcard&quot;,&#xd;
                            &quot;value&quot;: &quot;10.12.213.23&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: []&#xd;
                      }&#xd;
                    ]&#xd;
                  }&#xd;
                ]&#xd;
              }&#xd;
            ]&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">USG (Gx Only)</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.19/G2X_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderTermination" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalProjectId&quot;: &quot;6001&quot;,&#xd;
    &quot;externalOrderId&quot;: &quot;6001&quot;,&#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Terminate&quot;,&#xd;
        &quot;terminationReason&quot;: &quot;Other&quot;,&#xd;
        &quot;terminationReasonDetails&quot;: &quot;Was the service too expensive&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;${P_ProductInstantId}&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">ID_5ay6iiebcx</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.19/USG_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderSuspension" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalOrderId&quot;: &quot;6001&quot;,&#xd;
    &quot;marketSector&quot;: &quot;Enterprise Energy&quot;,&#xd;
    &quot;destinationFolderId&quot;: &quot;FO-0000001149&quot;,&#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Suspend&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;action&quot;: &quot;Update&quot;,&#xd;
            &quot;id&quot;: &quot;ID_c5mo7jdrsv&quot;,&#xd;
            &quot;productItem&quot;: [&#xd;
              {&#xd;
                &quot;action&quot;: &quot;Update&quot;,&#xd;
                &quot;id&quot;: &quot;PS_000141&quot;,&#xd;
                &quot;productItem&quot;: [&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Update&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000249&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;End Date&quot;,&#xd;
                        &quot;value&quot;: &quot;2020-02-22&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: []&#xd;
                  }&#xd;
                ]&#xd;
              }&#xd;
            ]&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">ID_5ay6iiebcx</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.19/USG_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderResumption" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalProjectId&quot;: &quot;externalOrderId&quot;,&#xd;
    &quot;externalOrderId&quot;: &quot;externalOrderId&quot;,&#xd;
&quot;destinationFolderId&quot;: &quot;destinationFolderId&quot;,&#xd;
  &#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Resume&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;productInstanceAlternateKey&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">ID_5ay6iiebcx</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.19/USG_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token_Validate" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login-stage.inmarsat.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth2/ausm8g8wZzBpBdp0N0x5/v1/token?grant_type=password&amp;client_id=0oa5zhvyrO7mAI0uf0x6&amp;username=cpq-service@inmarsat.com&amp;password=Welcome2019!&amp;client_secret=NbHM3iSSw4NmRq2nQN56c1mYwx65BKqHK6RJh0lK&amp;scope=cpq_role</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Partner Implementation</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers"/>
            <stringProp name="TestPlan.comments">0oa6bj1ltdWyVPRnp0x6</stringProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token_SFDCAdmin" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">inmarsat-nonprod-stage.apigee.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Partner Implementation</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa69gvbqK9vENbSg0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">VGe4RenV-nrTJ0hIZ24dkC2nUf6wqcXJYBp9K4UJ</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">0oa6bj1ltdWyVPRnp0x6</stringProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProductOrderManagement_QueryManualTask" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/productOrderingManagement/manualTask?customerId=248912</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/productOrderingManagement/manualTask?{query} /v1/productOrderingManagement/manualTask?customerId=246767&amp;channel=API</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_TaskID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_TaskID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;taskId&quot;:&quot;(.*?)&quot;,&quot;status</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProductOrderManagement_CompleteManualTask" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;channel&quot;: &quot;API&quot;,&#xd;
  &quot;status&quot;: &quot;Confirmed&quot;,&#xd;
  &quot;statusDetails&quot;: &quot;Confirmed by API&quot;&#xd;
}   &#xd;
 &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">inmarsat-nonprod-stage.apigee.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/manualTask/139027</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${C_TaskID}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test_ProductOrderManagement_R1.05.1.23" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa2mk5w5JbkuCYTp0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">3ECNBMclBboZow_8r9_OBewm6jxvsIx-tgA14BQG</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">access_token&quot;:&quot;(.*?)&quot;,&quot;token_type</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProductOrderManagement_RetrieveOrder" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/retrieveProductOrder?orderId=${P_CommercialOrderID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/productOrderingManagement/retrieveProductOrder?orderId=${P_CommercialOrderID}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_DestinationFolderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_DestinationFolderId</stringProp>
            <stringProp name="RegexExtractor.regex">destinationFolderId&quot;:&quot;(.*?)&quot;,&quot;destinationFolderName</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProductOrderManagement_QueryOrdersMilestones" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrderMilestone?orderId=${P_CommercialOrderID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/productOrderingManagement/productOrderMilestone?{query}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProductOrderManagement_QueryOrder" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/queryProductOrder?destinationFolderId=${P_OrderMgmt_DestFolderId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/productOrderingManagement/queryProductOrder?{query}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProductOrderManagement_CreateQuote" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;folderId&quot;: &quot;${P_OrderMgmt_DestFolderId}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/quote</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Currently Copy Quote and create quote is not avaliable via API</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedQuoteId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_CreatedQuoteId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;id&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProductOrderManagement_QueryQuote" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/quote?destinationFolderId=${P_OrderMgmt_DestFolderId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/productOrderingManagement/quote?{query}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderSubmission_GxGSS_new" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalProjectId&quot;: &quot;9091&quot;,&#xd;
    &quot;externalOrderId&quot;: &quot;3313&quot;,&#xd;
    &quot;marketSector&quot;: &quot;Government Land&quot;,&#xd;
    &quot;destinationFolderId&quot;: &quot;FO-0000004588&quot;,&#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Acquisition&quot;,&#xd;
        &quot;modifyOrderType&quot;: &quot;Not Applicable&quot;,&#xd;
        &quot;siteId&quot;: &quot;35145&quot;,&#xd;
        &quot;contractId&quot;: &quot;1234&quot;,&#xd;
        &quot;billingAccountId&quot;: &quot;1043&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;action&quot;: &quot;Add&quot;,&#xd;
            &quot;id&quot;: &quot;PO_000071&quot;,&#xd;
            &quot;characteristic&quot;: [&#xd;
              {&#xd;
                &quot;name&quot;: &quot;&quot;,&#xd;
                &quot;value&quot;: &quot;GX GSS&quot;&#xd;
              }&#xd;
            ],&#xd;
            &quot;productItem&quot;: [&#xd;
              {&#xd;
                &quot;action&quot;: &quot;Add&quot;,&#xd;
                &quot;id&quot;: &quot;PS_000141&quot;,&#xd;
                &quot;characteristic&quot;: [&#xd;
                  {&#xd;
                    &quot;name&quot;: &quot;name&quot;,&#xd;
                    &quot;value&quot;: &quot;GX Configuration&quot;&#xd;
                  }&#xd;
                ],&#xd;
                &quot;productItem&quot;: [&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000662&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;Service Delivery Point&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Remote Site Name&quot;,&#xd;
                        &quot;value&quot;: &quot;TestSite&quot;&#xd;
                      }&#xd;
                    ]&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000249&quot;&#xd;
                  },&#xd;
                  {&#xd;
                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                    &quot;id&quot;: &quot;PS_000045&quot;,&#xd;
                    &quot;characteristic&quot;: [&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;name&quot;,&#xd;
                        &quot;value&quot;: &quot;GX&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Geographical Regionality&quot;,&#xd;
                        &quot;value&quot;: &quot;Global&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;768&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Downlink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;3072&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;CIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;384&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;MIR Uplink (kbps)&quot;,&#xd;
                        &quot;value&quot;: &quot;1536&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;SLA (%)&quot;,&#xd;
                        &quot;value&quot;: &quot;95&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period Unit&quot;,&#xd;
                        &quot;value&quot;: &quot;Monthly&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Minimum Subscription Period&quot;,&#xd;
                        &quot;value&quot;: &quot;12&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Subscription Plan Type&quot;,&#xd;
                        &quot;value&quot;: &quot;Gold&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Level&quot;,&#xd;
                        &quot;value&quot;: &quot;Standard&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Terminal Group/Class&quot;,&#xd;
                        &quot;value&quot;: &quot;Group 1&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Meet Me Point&quot;,&#xd;
                        &quot;value&quot;: &quot;Amsterdam&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Traffic Service Level&quot;,&#xd;
                        &quot;value&quot;: &quot;TSL01&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;name&quot;: &quot;Volume Allowance Carry Over (GB)&quot;,&#xd;
                        &quot;value&quot;: &quot;Not Applicable&quot;&#xd;
                      }&#xd;
                    ],&#xd;
                    &quot;productItem&quot;: [&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000120&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Satellite Terminal&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Active Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.4-86.pkg&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;Backup Firmware Version&quot;,&#xd;
                            &quot;value&quot;: &quot;CX7xx_rootfs_rmt_1.6.1.2-58.pkg&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000632&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;name&quot;,&#xd;
                                &quot;value&quot;: &quot;South&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Type&quot;,&#xd;
                                &quot;value&quot;: &quot;South&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Type&quot;,&#xd;
                                &quot;value&quot;: &quot;West&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Degrees&quot;,&#xd;
                                &quot;value&quot;: &quot;12&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Minutes&quot;,&#xd;
                                &quot;value&quot;: &quot;23&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Latitude Seconds&quot;,&#xd;
                                &quot;value&quot;: &quot;23&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Degrees&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Minutes&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Longitude Seconds&quot;,&#xd;
                                &quot;value&quot;: &quot;34&quot;&#xd;
                              }&#xd;
                            ]&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000166&quot;,&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000168&quot;,&#xd;
                                &quot;productItem&quot;: [&#xd;
                                  {&#xd;
                                    &quot;action&quot;: &quot;Add&quot;,&#xd;
                                    &quot;id&quot;: &quot;TPS_000180&quot;,&#xd;
                                    &quot;characteristic&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Terminal Provisioning Key&quot;,&#xd;
                                        &quot;value&quot;: &quot;CQAFBDCUVSCC6===&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Stats Management Profile&quot;,&#xd;
                                        &quot;value&quot;: &quot;standard&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;productItem&quot;: [&#xd;
                                      {&#xd;
                                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                                        &quot;id&quot;: &quot;PS_000534&quot;,&#xd;
                                        &quot;characteristic&quot;: [&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Portswitchnumber&quot;,&#xd;
                                            &quot;value&quot;: &quot;Port5&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Autonegotiation&quot;,&#xd;
                                            &quot;value&quot;: &quot;Y&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Speed&quot;,&#xd;
                                            &quot;value&quot;: &quot;100Mbps&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Mode&quot;,&#xd;
                                            &quot;value&quot;: &quot;HalfDuplex&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Tagenable&quot;,&#xd;
                                            &quot;value&quot;: &quot;N&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;SVN List&quot;,&#xd;
                                            &quot;value&quot;: &quot;1104&quot;&#xd;
                                          },&#xd;
                                          {&#xd;
                                            &quot;name&quot;: &quot;Enable Trunk&quot;,&#xd;
                                            &quot;value&quot;: &quot;Y&quot;&#xd;
                                          }&#xd;
                                        ]&#xd;
                                      }&#xd;
                                    ]&#xd;
                                  }&#xd;
                                ]&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      },&#xd;
                      {&#xd;
                        &quot;action&quot;: &quot;Add&quot;,&#xd;
                        &quot;id&quot;: &quot;PS_000509&quot;,&#xd;
                        &quot;characteristic&quot;: [&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;name&quot;,&#xd;
                            &quot;value&quot;: &quot;GX Corporate SVN &quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;SVN Number&quot;,&#xd;
                            &quot;value&quot;: &quot;1104&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;ETH0 IP Prefix&quot;,&#xd;
                            &quot;value&quot;: &quot;10.22.11.22&quot;&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;name&quot;: &quot;ETH0 Subnet Mask&quot;,&#xd;
                            &quot;value&quot;: &quot;12.232.12.21&quot;&#xd;
                          }&#xd;
                        ],&#xd;
                        &quot;productItem&quot;: [&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000635&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;MD5authPasswd&quot;,&#xd;
                                &quot;value&quot;: &quot;123213&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Remote Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.1.23.123&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Remote AS&quot;,&#xd;
                                &quot;value&quot;: &quot;123&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;BGP Send Recv&quot;,&#xd;
                                &quot;value&quot;: &quot;Recevie(1)&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;OTA BGP Peer&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Redistribute Connected Routes into BGP&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Redistribute Static Routes into BGP&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              }&#xd;
                            ]&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000516&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout Interface&quot;,&#xd;
                                &quot;value&quot;: &quot;eth0&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Address&quot;,&#xd;
                                &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Gateway&quot;,&#xd;
                                &quot;value&quot;: &quot;10.22.111.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;TSVN Statrout IPv4 Netmask&quot;,&#xd;
                                &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000513&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Primary Global DNS Server IP Address&quot;,&#xd;
                                &quot;value&quot;: &quot;10.22.111.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Primary Global DNS Server Name&quot;,&#xd;
                                &quot;value&quot;: &quot;TestServer&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Secondary Global DNS Server IP Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.232.12.22&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Secondary Global DNS Server Name&quot;,&#xd;
                                &quot;value&quot;: &quot;TestServer&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000514&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NATPAT Timeout&quot;,&#xd;
                                &quot;value&quot;: &quot;10&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Enable&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;10.23.324.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Firewall Protocol&quot;,&#xd;
                                &quot;value&quot;: &quot;AH&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Local Address&quot;,&#xd;
                                &quot;value&quot;: &quot;12.243.23.221&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Local Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;10.23.324.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session NAT Port Range&quot;,&#xd;
                                &quot;value&quot;: &quot;12.23.123.2&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;NAT Session Protocol&quot;,&#xd;
                                &quot;value&quot;: &quot;AH&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;SIPALG Table Enable&quot;,&#xd;
                                &quot;value&quot;: &quot;Y&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;SIPALG Table Port&quot;,&#xd;
                                &quot;value&quot;: &quot;123&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: []&#xd;
                          },&#xd;
                          {&#xd;
                            &quot;action&quot;: &quot;Add&quot;,&#xd;
                            &quot;id&quot;: &quot;PS_000510&quot;,&#xd;
                            &quot;characteristic&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;DHCP Mode&quot;,&#xd;
                                &quot;value&quot;: &quot;DHCPRelay&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;productItem&quot;: [&#xd;
                              {&#xd;
                                &quot;action&quot;: &quot;Add&quot;,&#xd;
                                &quot;id&quot;: &quot;PS_000523&quot;,&#xd;
                                &quot;characteristic&quot;: [&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;name&quot;,&#xd;
                                    &quot;value&quot;: &quot;DHCP_Relay&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Primary Local DNS Server IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.2&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;Secondary Local DNS Server IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.3&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay to IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.6&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay Subnet IP Address&quot;,&#xd;
                                    &quot;value&quot;: &quot;10.23.213.5&quot;&#xd;
                                  },&#xd;
                                  {&#xd;
                                    &quot;name&quot;: &quot;DHCP Relay Subnet Mask&quot;,&#xd;
                                    &quot;value&quot;: &quot;255.255.255.0&quot;&#xd;
                                  }&#xd;
                                ],&#xd;
                                &quot;productItem&quot;: []&#xd;
                              }&#xd;
                            ]&#xd;
                          }&#xd;
                        ]&#xd;
                      }&#xd;
                    ]&#xd;
                  }&#xd;
                ]&#xd;
              }&#xd;
            ]&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">GSS (Gx Only)</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 //FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.22/GSS_OrderID.csv&quot;, true);
 FileWriter fstream = new FileWriter(&quot;C:/Users/Ramya.Ramasety.A01G00SDTPTW003/Desktop/API/Wave2a/TestData/GSS_Orders_testdata/GSS_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();

 </stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdOrderMgmt_OrderTermination" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;externalProjectId&quot;: &quot;6001&quot;,&#xd;
    &quot;externalOrderId&quot;: &quot;6001&quot;,&#xd;
    &quot;orderItem&quot;: [&#xd;
      {&#xd;
        &quot;orderType&quot;: &quot;Terminate&quot;,&#xd;
        &quot;terminationReason&quot;: &quot;Other&quot;,&#xd;
        &quot;terminationReasonDetails&quot;: &quot;Was the service too expensive&quot;,&#xd;
        &quot;productItem&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;${P_ProductInstantId}&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productOrderingManagement/productOrder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">ID_5ay6iiebcx</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedOrderId" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_OrderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;orderId&quot;:&quot;(.*?)&quot;,&quot;externalOrderId</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Save_OrderID" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">// get variables from regular expression extractor 
 OrderID = vars.get(&quot;C_OrderId&quot;);
 
 // pass true if want to append to existing file  
 // if want to overwrite, then don&apos;t pass the second argument
 FileWriter fstream = new FileWriter(&quot;C:/Users/moumita mitra/Desktop/API/Results/R1.05.1.19/USG_OrderID.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(OrderID);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateToken_PartnerImplementation" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa2mk5w5JbkuCYTp0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">3ECNBMclBboZow_8r9_OBewm6jxvsIx-tgA14BQG</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">access_token&quot;:&quot;(.*?)&quot;,&quot;token_type</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProductOrderManagement_QueryManualTask" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/productOrderingManagement/manualTask?customerId=${P_ManualTask_CustId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/productOrderingManagement/manualTask?{query} /v1/productOrderingManagement/manualTask?customerId=246767&amp;channel=API</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_TaskID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_TaskID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;taskId&quot;:&quot;(.*?)&quot;,&quot;status</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">150000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test_CatalogManagement_R1.05.1.23" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay">10</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa2mk5w5JbkuCYTp0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">3ECNBMclBboZow_8r9_OBewm6jxvsIx-tgA14BQG</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">access_token&quot;:&quot;(.*?)&quot;,&quot;token_type</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CatalogMgmt_QueryProduct" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/catalogManagement/eligibleProduct/${P_CatalogMgmt_FolderID}/${P_CatalogMgmt_ContractID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">GET  /catalogManagement/eligibleProduct/{folderId}/{contractId}?{query} P_CatalogMgmt_FolderID,P_CatalogMgmt_ContractID</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_POId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_POId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;,&quot;name</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CatalogMgmt_QuerySubscriptionPlan" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/catalogManagement/subscriptionPlan/${P_CatalogMgmt_SPoID}/${P_CatalogMgmt_SFolderID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/catalogManagement/subscriptionPlan/{productOfferingId}/{folderId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CatalogMgmt_RetrieveProductOfferingInfo" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/catalogManagement/productOffering/${P_CatalogMgmt_SPoID}?usageType=Viewing</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/catalogManagement/productOffering/{productOfferingId}?query /${P_CatalogMgmt_SPoID}/usageType/Acquisition</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">80000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test_ProductInventoryManagement_R1.05.1.23" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay">15</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa2mk5w5JbkuCYTp0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">3ECNBMclBboZow_8r9_OBewm6jxvsIx-tgA14BQG</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdInventoryMgmt_InstalledProductSummary" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productInventoryManagement/product/summary?customerId=${P_PdtInv_CustId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/productInventoryManagement/product/summary?customerId=${P_cid_1} ${P_PdtInv_CustId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ProductId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_ProductId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;,&quot;status&quot;:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdInventoryMgmt_RetrieveInstalledProduct" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productInventoryManagement/product/${P_ProductId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/productInventoryManagement/product/{productId)   ${P_ProductId} CIB_ID_gbtu4qp6m6 CIB_ID_xgtoq5kxaj</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdInventoryMgmt_QueryInstalledProduct_1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productInventoryManagement/product?status=Active&amp;destinationFolder=${P_DestFolderId}&amp;customerId=${P_QCustId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/productInventoryManagement/product?status=Active&amp;customerId=${P_QCustId}&amp;siteId=${P_SiteId}&amp;destinationFolder=${P_DestFolderId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PrdInventoryMgmt_QueryInstalledProduct_2" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/productInventoryManagement/product?status=Active&amp;siteId=${P_SiteId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/productInventoryManagement/product?status=Active&amp;customerId=${P_QCustId}&amp;siteId=${P_SiteId}&amp;destinationFolder=${P_DestFolderId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">60000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test_ContractManagement_R1.05.1.23" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay">20</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa2mk5w5JbkuCYTp0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">3ECNBMclBboZow_8r9_OBewm6jxvsIx-tgA14BQG</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">access_token&quot;:&quot;(.*?)&quot;,&quot;token_type</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ContractManagement_ContractId" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/contractManagement/contract/${P_ContractMgmt_CustId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/contract/ {customerId}____100140
/contractManagement/contract/{customerId}?{query}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
              <stringProp name="51512">404</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">120000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test_ResourceManagement_R1.05.1.23" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay">25</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa2mk5w5JbkuCYTp0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">3ECNBMclBboZow_8r9_OBewm6jxvsIx-tgA14BQG</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">access_token&quot;:&quot;(.*?)&quot;,&quot;token_type</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oaaoh6xjmEdhTyqv0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">fJwGiveSAzhQP_U4ki8knUcPVpIe23b67yOqpR-2</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">access_token&quot;:&quot;(.*?)&quot;,&quot;token_type</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ResourceMgmt_TPKCheck" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/resourceManagement/checkTerminalProvisioningKey/${P_TPK}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/checkTerminalProvisioningKey/{terminalProvKey} ${P_TPK}/</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51517">409</stringProp>
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">33</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ResourceMgmt_RetrieveMSISDN" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/resourceManagement/msisdn/${P_MSISDN_CustId}/${P_MSISDN_FolderId}/${P_MSISDN_MSISDN}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/resourceManagement/msisdn/${P_MSISDN_CustId}/${P_MSISDN_FolderId}/${P_MSISDN_MSISDN}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51517">409</stringProp>
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">33</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ResourceMgmt_RetrieveIMSI" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/resourceManagement/imsi/${P_IMSI_CustId}/${P_IMSI_FolderId}/${P_IMSI_IMSI}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/resourceManagement/imsi/{customerId}/{folderId}/{imsi} /901111211991260	/v1/resourceManagement/imsi/${P_IMSI_CustId}/${P_IMSI_FolderId}/${P_IMSI_IMSI}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51517">409</stringProp>
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">33</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ResourceMgmt_RetrieveSVN" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/resourceManagement/svn/${P_SVN_CustId}/${P_SVN_FolderId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/svn/{customerId}/{customerId/{folderId} P_SVN_CustId,P_SVN_FolderId</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51517">409</stringProp>
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">33</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">80000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="test_CustomerManagement_R1.05.1.23" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay">30</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa2mk5w5JbkuCYTp0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">3ECNBMclBboZow_8r9_OBewm6jxvsIx-tgA14BQG</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_RetrieveCustomers" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CustId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_CustId</stringProp>
            <stringProp name="RegexExtractor.regex">customerId&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="C_AddressIdJSON" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">C_AddressIdJSON</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..address[*].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">nooootFoubnd</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_RetrieveSpecificCustomer" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}  ${C_CustId} 100723</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_RetrieveCustomer" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/detail</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/detail</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_QueryCustomerAccounts" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/account</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/account         ___0014COMPT0KmJr0</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_accountNumber" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_accountNumber</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;accountNumber&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_RetrieveCustomerAccounts " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/account/${C_accountNumber}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/account/ {accountId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_AllCustAddress " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/address</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/address       ${C_CustId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_AddressId" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_AddressId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">noooot found</stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="C_SpecificAddressJSON" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">C_SpecificAddressJSON</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">not FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_GetCustSpecificAddress " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/address/${C_SpecificAddressJSON}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/address/ {addressId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa69gpvsEkOFrQLU0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">toBRfLsEsMVZMnIeMdUrEqcsf30hZBBcHE3L2jKM</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">toBRfLsEsMVZMnIeMdUrEqcsf30hZBBcHE3L2jKM</stringProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_CreateCustAddress " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;addressLine1&quot;: &quot;Perf Test Address ${P_Num}&quot;,&#xd;
            &quot;city&quot;: &quot;Bengaluru&quot;,&#xd;
            &quot;country&quot;: &quot;India&quot;,&#xd;
            &quot;isoCountryCode&quot;: &quot;IN&quot;,&#xd;
            &quot;postalCode&quot;: &quot;560045&quot;,&#xd;
            &quot;generalDetails&quot;: {&#xd;
                &quot;validFor&quot;: {&#xd;
                    &quot;startDateTime&quot;: &quot;2019-11-15T00:00:00Z&quot;,&#xd;
                    &quot;endDateTime&quot;: &quot;2019-11-15T12:00:00Z&quot;&#xd;
                }&#xd;
            }&#xd;
        }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/address</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">5d41665ac19b213c3dedca54-Created id    ${C_CustId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedAddressId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_CreatedAddressId</stringProp>
            <stringProp name="RegexExtractor.regex">addressId&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_UpdateCustAddress " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{  &#xd;
   &quot;addressLine1&quot;:&quot;Perf Test Address ${P_Num}&quot;,&#xd;
   &quot;city&quot;:&quot;Bangalore&quot;,&#xd;
   &quot;country&quot;:&quot;India&quot;,&#xd;
   &quot;postalCode&quot;:&quot;560045&quot;,&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/address/${C_CreatedAddressId}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/address/ {addressId}  ${C_CustId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_ DeleteCustomerAddress" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/address/${C_CreatedAddressId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/address/{addressId}    ${C_CustId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_AllCustContacts" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/contact</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${C_CustId} 100723</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ContactID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_ContactID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_MediumType" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_MediumType</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;(.*?)&quot;,&quot;value&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_GetCustSpecificContact" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/contact/${C_ContactID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/contact/{contactId}   5bfaee6e5fc8440001d8ec3a   ${C_CustId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_CreateCustContact" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;givenName&quot;: &quot;test_PTName${P_Num}&quot;,&#xd;
            &quot;surname&quot;: &quot;test_PTsurname${P_Num}&quot;,&#xd;
            &quot;prefix&quot;: &quot;&quot;,&#xd;
            &quot;suffix&quot;: &quot;&quot;,&#xd;
            &quot;jobTitle&quot;: &quot;test_jobTitle${P_Num}&quot;,&#xd;
            &quot;preferredContactMedium&quot;: &quot;&quot;,&#xd;
            &quot;medium&quot;: [{&#xd;
                &quot;allowContact&quot;: true,&#xd;
                &quot;type&quot;: &quot;Cell Phone&quot;,&#xd;
                &quot;value&quot;: &quot;1234567890&quot;&#xd;
                }],&#xd;
            &quot;generalDetails&quot;: {&#xd;
                &quot;validFor&quot;: {&#xd;
                    &quot;startDateTime&quot;: &quot;2019-11-20T00:00:01Z&quot;,&#xd;
      			&quot;endDateTime&quot;: &quot;2019-11-21T12:00:00Z&quot;&#xd;
                }&#xd;
            }&#xd;
}&#xd;
         </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/contact</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/contact  ${C_CustId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_CreatedContactId</stringProp>
            <stringProp name="RegexExtractor.regex">contactId&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_UpdateCustContact" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;givenName&quot;: &quot;PTgivenName${P_Num}&quot;,&#xd;
            &quot;surname&quot;: &quot;PTsurname${P_Num}&quot;,&#xd;
            &quot;prefix&quot;: &quot;&quot;,&#xd;
            &quot;suffix&quot;: &quot;&quot;,&#xd;
            &quot;jobTitle&quot;: &quot;test_jobTitle${P_Num}&quot;,&#xd;
            &quot;preferredContactMedium&quot;: &quot;&quot;,&#xd;
            &quot;medium&quot;: [{&#xd;
                &quot;allowContact&quot;: true,&#xd;
                &quot;value&quot;: &quot;012345&quot;,&#xd;
                &quot;type&quot;: &quot;Fax&quot;&#xd;
                }]&#xd;
        }&#xd;
&#xd;
    </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/contact/${C_CreatedContactId}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/contact/{contactId}   ${C_CustId} 100723 5bfaee6e5fc8440001d8ec3a 5bfaf1755fc8440001d8ee5c&quot;id&quot;: &quot;5bfaee6e5fc8440001d8ec3a&quot;,</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_DeleteCustContact" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/contact/${C_CreatedContactId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${C_CustId}  100803 5bfaf1755fc8440001d8ee5c</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_RetrieveContactMediums" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/contact/${C_ContactID}/medium</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/contact/{contactId}/medium</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_MediumId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_MediumId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;,&quot;type&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_GetSpecificContactMedium" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/contact/${C_ContactID}/medium/${C_MediumId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/contact/ {contactId}/medium/{mediumId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_UpdateMedium_Contact" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allowContact&quot;: true,&#xd;
    &quot;value&quot;: &quot;9111155665&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/contact/${C_ContactID}/medium/${C_MediumType}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/customerManagement/customer/{customerId}/contact/{contactId}/medium/{mediumType} - Run with CustMgmt_Cust_AllCustContacts</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_DeleteMedium_Contact " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/contact/${C_ContactID}/medium/${C_MediumType}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/customerManagement/customer/{customerId}/contact/{contactId}/medium/{mediumType}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_CreateMedium_Contact" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allowContact&quot;: true,&#xd;
    &quot;type&quot;: &quot;${C_MediumType}&quot;,&#xd;
    &quot;value&quot;: &quot;9111155660&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customer/${P_CustId}/contact/${C_ContactID}/medium</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/customer/{customerId}/contact/{contactId}/medium .....//type can be fax or Cell Phone</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedMediumId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_CreatedMediumId</stringProp>
            <stringProp name="RegexExtractor.regex">mediumId&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_RetrieveCustRefData" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/customerRefData?type=${P_CustRefType}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/customerManagement/customerRefData?{query}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Cust_RetrieveGenericRefData " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/genericRefData?type=${P_GenRefType}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/customerManagement/genericRefData?{query}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateToken_SiteFolder" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa69gpvsEkOFrQLU0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">toBRfLsEsMVZMnIeMdUrEqcsf30hZBBcHE3L2jKM</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Folder_QueryCustFolder " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/folder?customerId=${P_CustId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/folder?customerId=${P_CustId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Folder_RegisterCustFolder " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;PerfTestFolder${P_Num}&quot;,&#xd;
  &quot;parentFolderId&quot;: &quot;${P_CustMgmt_FolderID}&quot;&#xd;
  &#xd;
} &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/folder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${P_CustId} &quot;customerId&quot;: &quot;100929&quot; Token - PArtner Implementation &quot;F-0000000207&quot;</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedFolderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_CreatedFolderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;folderId&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Folder_ReturnFolderHierarchy_DirectCust" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/folder/directHierarchy/${P_CustId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/folder/directHierarchy/${P_CustId} 248991</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_FolderID" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_FolderID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Folder_RetrieveCustFolder " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/folder/${C_CreatedFolderId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/folder/${P_OrderMgmt_DestFolderId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Folder_ModifyCustFolder " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;PerfTestFolderU${P_Num}&quot;&#xd;
&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/folder/${C_CreatedFolderId}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/folder/${C_CreatedFolderId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Folder_UnregisterCustFolder " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/folder/${C_CreatedFolderId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/folder/${C_CreatedFolderId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateToken_SiteFolder" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa69gpvsEkOFrQLU0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">toBRfLsEsMVZMnIeMdUrEqcsf30hZBBcHE3L2jKM</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Folder_RegisterCustFolder " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;PerfTestFolder${P_Num}&quot;,&#xd;
  &quot;parentFolderId&quot;: &quot;${P_CustMgmt_FolderID}&quot;&#xd;
  &#xd;
} &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/folder</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${P_CustId} &quot;customerId&quot;: &quot;100929&quot; Token - PArtner Implementation &quot;F-0000000207&quot;</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedFolderId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_CreatedFolderId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;folderId&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Site_CreateSite_Land" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;: &quot;PerfTestSite${P_Num}&quot;,&#xd;
    &quot;category&quot;: &quot;Land&quot;,&#xd;
    &quot;categoryDetails&quot;:{&#xd;
    	&quot;land&quot;:{&#xd;
    		&quot;countryOfInstallation&quot;:&quot;AX&quot; &#xd;
    		}&#xd;
    		},&#xd;
    &quot;folderId&quot;: &quot;${C_CreatedFolderId}&quot;,&#xd;
    &quot;status&quot; : &quot;Draft&quot;&#xd;
}&#xd;
&#xd;
  &#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/site</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">&quot;309191&quot; &quot;countryOfInstallation&quot;:&quot;AX&quot;, Token - PArtner Implementation &quot;FO-0000000059&quot;</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_SiteIdLand" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_SiteIdLand</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;siteId&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Site_CreateSite_Air" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;PerfTestSite${P_Num}&quot;,&#xd;
  &quot;category&quot;: &quot;Air&quot;,&#xd;
  &quot;categoryDetails&quot;: {&#xd;
      &quot;aircraft&quot;: {&#xd;
      &quot;class&quot;: &quot;Government&quot;&#xd;
      }&#xd;
   },&#xd;
  &quot;folderId&quot;: &quot;${C_CreatedFolderId}&quot;,&#xd;
  &quot;status&quot;: &quot;Draft&quot;&#xd;
}&#xd;
&#xd;
  &#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/site</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">&quot;309191&quot; &quot;countryOfInstallation&quot;:&quot;AX&quot;, Token - PArtner Implementation &quot;FO-0000000082&quot;</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_SiteIdAir" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_SiteIdAir</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;siteId&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Site_CreateSite_Sea" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;PerfTestSite${P_Num}&quot;,&#xd;
  &quot;category&quot;: &quot;Sea&quot;,&#xd;
  &quot;categoryDetails&quot;: {&#xd;
    &quot;vessel&quot;: {&#xd;
      &quot;seagoing&quot;: &quot;Y&quot;,&#xd;
      &quot;selfPropelled&quot;: &quot;Y&quot;,&#xd;
      &quot;market&quot;: &quot;Merchant&quot;,&#xd;
      &quot;sector&quot;: &quot;Bulk&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;folderId&quot;: &quot;${C_CreatedFolderId}&quot;,&#xd;
  &quot;status&quot;: &quot;Draft&quot;&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/site</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">&quot;309191&quot; &quot;countryOfInstallation&quot;:&quot;AX&quot;, Token - PArtner Implementation &quot;FO-0000000065&quot;</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_SiteIdSea" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_SiteIdSea</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;siteId&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Site_ModifySite_Land" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;: &quot;PerfTestSite${P_Num}&quot;,&#xd;
    &quot;category&quot;: &quot;Land&quot;,&#xd;
    &quot;categoryDetails&quot;:{&#xd;
    	&quot;land&quot;:{&#xd;
    		&quot;countryOfInstallation&quot;:&quot;AX&quot; &#xd;
    		}&#xd;
    		},&#xd;
 	&#xd;
    &quot;status&quot; : &quot;Active&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/site/${C_SiteIdLand}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${C_CreatedSiteId}/ Token - Partner Implementation</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Site_ModifySite_Air" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;PerfTestSite${P_Num}&quot;,&#xd;
  &quot;category&quot;: &quot;Air&quot;,&#xd;
  &quot;categoryDetails&quot;: {&#xd;
      &quot;aircraft&quot;: {&#xd;
      &quot;class&quot;: &quot;Government&quot;&#xd;
      }&#xd;
   },&#xd;
  &quot;status&quot;: &quot;Active&quot;&#xd;
}&#xd;
&#xd;
  &#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/site/${C_SiteIdAir}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${C_CreatedSiteId}/ Token - Partner Implementation</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Site_ModifySite_Sea" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;PerfTestSite${P_Num}&quot;,&#xd;
  &quot;category&quot;: &quot;Sea&quot;,&#xd;
  &quot;categoryDetails&quot;: {&#xd;
    &quot;vessel&quot;: {&#xd;
      &quot;seagoing&quot;: &quot;Y&quot;,&#xd;
      &quot;selfPropelled&quot;: &quot;Y&quot;,&#xd;
      &quot;market&quot;: &quot;Merchant&quot;,&#xd;
      &quot;sector&quot;: &quot;Bulk&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;status&quot;: &quot;Active&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/site/${C_SiteIdSea}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${C_CreatedSiteId}/ Token - Partner Implementation</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Site_RetrieveSiteList " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/site?customerId=${P_PdtInv_CustId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/site?customerId=${P_CustId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_SiteId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_SiteId</stringProp>
            <stringProp name="RegexExtractor.regex">id&quot;:&quot;(.*?)&quot;,&quot;name</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Site_RetrieveSpecificSite " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/site/${C_SiteId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/site/ {siteId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustMgmt_Site_DeactivateSite " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/site/${C_SiteIdLand}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/customerManagement/site/ {siteId} ${C_CreatedSiteId} </stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="N_CustMgmt_Folder_ReturnFolderHierarchy " enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/folder/hierarchy</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/folder/directHierarchy/{customerId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="N_CustMgmt_Folder_RegisterDirectCustFolder " enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/customerManagement/directFolder/246767</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments"> {customerId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">20000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test_232_UserManagement_R1.05.1.23" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay">35</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ClientId" elementType="Header">
                <stringProp name="Header.name">ClientId</stringProp>
                <stringProp name="Header.value">0oa2mk5w5JbkuCYTp0x6</stringProp>
              </elementProp>
              <elementProp name="ClientSecret" elementType="Header">
                <stringProp name="Header.name">ClientSecret</stringProp>
                <stringProp name="Header.value">3ECNBMclBboZow_8r9_OBewm6jxvsIx-tgA14BQG</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Token Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="417462488">&quot;access_token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Token NOT generated</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_Token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Corr_Token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,&quot;scope</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_RetrieveUserList" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_UserId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_UserId</stringProp>
            <stringProp name="RegexExtractor.regex">id&quot;:&quot;(.*?)&quot;,&quot;userType</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_RetrieveSpecificUser" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_UserId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${P_Userid}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-892481550">status</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_CreateUser" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;login&quot;: &quot;TestFPerf${P_Name}.TestLPerf${P_Name}@gmail.com&quot;,&#xd;
    &quot;firstName&quot;: &quot;TestFPerf${P_Name}&quot;,&#xd;
    &quot;lastName&quot;: &quot;TestLPerf${P_Name}&quot;,&#xd;
    &quot;mobilePhone&quot;: &quot;+44114566${P_Num}&quot;,&#xd;
    &quot;primaryEmail&quot;: &quot;TestFPerf${P_Name}.TestLPerf${P_Name}@gmail.com&quot;,&#xd;
    &quot;secondaryEmail&quot;: &quot;&quot;,&#xd;
    &quot;userType&quot;: &quot;EXTERNAL&quot;,&#xd;
    &quot;customerId&quot;: &#xd;
       [ &quot;${P_cid}&quot;]&#xd;
   &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJraWQiOiJzaWM1VERYdkN2ampNRnozX0hNQjlBdk5LSjBiYWJVcEZNWTFSMGxXM2dnIiwiYWxnIjoiUlMyNTYifQ.eyJ2ZXIiOjEsImp0aSI6IkFULml1WFUwZnYxSGJNMHF5Z2Z4RURoWXBVaFBCUThVTGRSQ1JwZTNpcy1uVDAiLCJpc3MiOiJodHRwczovL2xvZ2luLXN0YWdlLmlubWFyc2F0LmNvbS9vYXV0aDIvYXVzbThnOHdaekJwQmRwME4weDUiLCJhdWQiOiJhcGk6Ly9kZWZhdWx0IiwiaWF0IjoxNTU0MDk4MDc4LCJleHAiOjE1NTQxMDE2NzgsImNpZCI6IjBvYTJtazV3NUpia3VDWVRwMHg2Iiwic2NwIjpbImFjY2VzcyJdLCJzdWIiOiIwb2EybWs1dzVKYmt1Q1lUcDB4NiJ9.ND3AEWqU4OHTmrqId7lIuceGmiSpHZ7nH4MHB2GxnD_LzzePRkdApu3-P4hHgkTQX9p3zQClAsyhQqg8y4KrZ64LBDOtm1GOz6F6oEcUOCg49MrDZuXu4rhH-jlSyxF45qG341qgP1vWUnSJJFvHgiwL4ThJPhBV687rxQvDP_Nzmt9a1JvEGjQahE-npksTpiDQAnqK-K_YirY2SYJ55JCBVv0sbC2uvMXixc4cBEkrYLp_Usz9FDuhZxHNtdWrOFSg0SuaJhoys3nUpNguVBWZHxR8OVxmKEaBMyUENRwdPjr-zA47wvRvjbFDGwv_ifSteHSYW56ddGHlKUxEkA</stringProp>
              </elementProp>
              <elementProp name="x-api-key" elementType="Header">
                <stringProp name="Header.name">x-api-key</stringProp>
                <stringProp name="Header.value">YsbEv4lwonTvx6m0CdHUO6NE5JaCxUQy</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">05782d4c-935e-46cf-afa0-8a10e7ff2bcf</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="accept-encoding" elementType="Header">
                <stringProp name="Header.name">accept-encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.6.1</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedUserID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C1_CreatedUserID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$   </stringProp>
            <stringProp name="RegexExtractor.default">Nftnd</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3355">id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">def C2_CreatedUserID = vars.get (&quot;C1_CreatedUserID&quot;);
log.info (&quot;Creqated User ID is&quot; + C2_CreatedUserID );
C_CreatedUserID = C2_CreatedUserID.replaceAll(&quot;\\s&quot;,&quot;&quot;);
log.info (&quot;Created User Ids withhout space -&gt;&quot; + C_CreatedUserID );
vars.put (&quot;C_CreatedUserID&quot;,C_CreatedUserID)</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="----------------------usr-----------------------" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${P_Userid}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-892481550">status</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_ModifyUser" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;login&quot;: &quot;TestFPerf${P_Name}U.TestLPerf${P_Name}U@gmail.com&quot;,&#xd;
  &quot;status&quot;: &quot;PROVISIONED&quot;,&#xd;
  &quot;firstName&quot;: &quot;TestFPerf${P_Name}&quot;,&#xd;
  &quot;middleName&quot;: &quot;&quot;,&#xd;
  &quot;lastName&quot;: &quot;TestLPerf${P_Name}&quot;,&#xd;
  &quot;mobilePhone&quot;: &quot;+44114566${P_Num}&quot;,&#xd;
  &quot;primaryEmail&quot;: &quot;TestFPerf${P_Name}U.TestLPerf${P_Name}U@gmail.com&quot;,&#xd;
  &quot;secondaryEmail&quot;: &quot;&quot;,&#xd;
  &quot;userType&quot;: &quot;EXTERNAL&quot;,&#xd;
  &quot;customerId&quot;: [&#xd;
    &quot;${P_cid}&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">PROVISIONED ${C_CreatedUserID}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="----------------------usr-----------------------" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${P_Userid}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-892481550">status</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_RetrieveAvailableRoleDetails" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}/available_role</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/userManagement/user/${P_Userid}/available_role</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="C_AllowedScopeType" enabled="false">
            <stringProp name="TestPlan.comments">$.[*].id</stringProp>
            <stringProp name="JSONPostProcessor.referenceNames">JSON_Role</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.[*].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NotFound KPOIPOUIPOUPOUPOJUPO</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_AssignRole" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_AssignRole</stringProp>
            <stringProp name="RegexExtractor.regex">\[{&quot;id&quot;:(.*?),&quot;name&quot;:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_AllowedScopeType" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_AllowedScopeType</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;allowedScopeTypes&quot;:\[{&quot;id&quot;:(.*?),&quot;name&quot;:&quot;(.*?)&quot;,&quot;description&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$2$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_AssignRole" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;scopeValue&quot;: &quot;249100&quot;,&#xd;
        &quot;scopeType&quot;: &quot;${C_AllowedScopeType}&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/00u4trbqqnrVqVYxr0x6/role/45</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/userManagement/user/${P_Userid}/role/39 Run with UserMgmt_User_RetrieveAvailableRoleDetails

/v1/userManagement/user/00u4trbqqnrVqVYxr0x6/role/${C_AssignRole}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_AssignRole" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;scopeValue&quot;: &quot;${P_fid}&quot;,&#xd;
        &quot;scopeType&quot;: &quot;Folder&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}/role/45</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/userManagement/user/${P_Userid}/role/39 Run with UserMgmt_User_RetrieveAvailableRoleDetails

/v1/userManagement/user/00u4trbqqnrVqVYxr0x6/role/${C_AssignRole}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_RetrieveRoleDetails" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}/role</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/userManagement/user/${C_CreatedUserID}/role</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_UserRoleId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_UserRoleId</stringProp>
            <stringProp name="RegexExtractor.regex">id&quot;:(.*?),&quot;name</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_RetrieveUserRoleScope" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}/role/45/scope</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/userManagement/user/{userId}/role/{roleId}/scope /v1/userManagement/user/${P_Userid}/role/${C_UserRoleId}/scope</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CreatedScopeId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_CreatedScopeId</stringProp>
            <stringProp name="RegexExtractor.regex">\[{&quot;id&quot;:(.*?),&quot;scopeType&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TESTUserMgmt_User_AssignScopeToRole" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;scopeValue&quot;: &quot;${P_fid}&quot;,&#xd;
        &quot;scopeType&quot;: &quot;Folder&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}/role/45/scope/${C_CreatedScopeId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/userManagement/user/{userId}/role/{roleId}/scope</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_UnassignScopeToRole" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}/role/45/scope/${C_CreatedScopeId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/userManagement/user/{userId}/role/{roleId}/scope/{scopeId}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_UnassignRole" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}/role/45</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/userManagement/user/${P_Userid}/role/${JSON_Role}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_User_DeleteUser" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_CreatedUserID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${C_CreatedUserID}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="----------------------usr-----------------------" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${C_UserId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${P_Userid}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-892481550">status</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_Scope_RetrieveScopeList" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/scopeType</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1724546052">description</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_Scope_RetrieveSpecificScope" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/scopeType/${__Random(1,4,)}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1724546052">description</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_Role_RetrieveRoleList" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/role</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3373707">name</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_Role_RetrieveSpecificRoleID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/role/${__Random(1,60,)}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3373707">name</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_Access_RetrieveAccess" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/access</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-341064690">resource</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_Access_AccessShiro" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/access/shiro</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1622990145">AvailableRole</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_Category_RetrieveCategoryList" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/category</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CategoryId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_CategoryId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.*?),&quot;name</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3373707">name</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserMgmt_Category_RetrieveSpecificCategory" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/category/${C_CategoryId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3355">id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NF_UserMgmt_User_SuspendUser" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${P_Userid}/suspend</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">00u14w2rn4eZqgqIQ0x6 - Active</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NF_UserMgmt_User_UnsuspendUser" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/${P_Userid}/unsuspend</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/v1/userManagement/user/${UserID}/unsuspend</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NF_UserMgmt_User_UnlockUser" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/00u40a5trVCBUdhIi0x6/unlock</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">00u40a5trVCBUdhIi0x6/ LOCKED_OUT</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3355">id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NF_UserMgmt_User_ResetPassword" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/user/00u40a5trVCBUdhIi0x6/resetPassword</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/userManagement/user/{userId}/resetPassword ACTIVE</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-892481550">status</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NF_UserMgmt_Access_ChangePassword" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/access/changePassword</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/userManagement/access/changePassword</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJraWQiOiJzaWM1VERYdkN2ampNRnozX0hNQjlBdk5LSjBiYWJVcEZNWTFSMGxXM2dnIiwiYWxnIjoiUlMyNTYifQ.eyJ2ZXIiOjEsImp0aSI6IkFULml1WFUwZnYxSGJNMHF5Z2Z4RURoWXBVaFBCUThVTGRSQ1JwZTNpcy1uVDAiLCJpc3MiOiJodHRwczovL2xvZ2luLXN0YWdlLmlubWFyc2F0LmNvbS9vYXV0aDIvYXVzbThnOHdaekJwQmRwME4weDUiLCJhdWQiOiJhcGk6Ly9kZWZhdWx0IiwiaWF0IjoxNTU0MDk4MDc4LCJleHAiOjE1NTQxMDE2NzgsImNpZCI6IjBvYTJtazV3NUpia3VDWVRwMHg2Iiwic2NwIjpbImFjY2VzcyJdLCJzdWIiOiIwb2EybWs1dzVKYmt1Q1lUcDB4NiJ9.ND3AEWqU4OHTmrqId7lIuceGmiSpHZ7nH4MHB2GxnD_LzzePRkdApu3-P4hHgkTQX9p3zQClAsyhQqg8y4KrZ64LBDOtm1GOz6F6oEcUOCg49MrDZuXu4rhH-jlSyxF45qG341qgP1vWUnSJJFvHgiwL4ThJPhBV687rxQvDP_Nzmt9a1JvEGjQahE-npksTpiDQAnqK-K_YirY2SYJ55JCBVv0sbC2uvMXixc4cBEkrYLp_Usz9FDuhZxHNtdWrOFSg0SuaJhoys3nUpNguVBWZHxR8OVxmKEaBMyUENRwdPjr-zA47wvRvjbFDGwv_ifSteHSYW56ddGHlKUxEkA</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">4bb7d576-ded9-4cc7-9cbf-4de8be8695af</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="accept-encoding" elementType="Header">
                <stringProp name="Header.name">accept-encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.6.1</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NF_UserMgmt_Access_RetrieveAccessProfile" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/access/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${P_Userid} ${C_CreatedUserID}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">OAuth 2.0 ${Corr_Token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-892481550">status</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NF_UserMgmt_Access_UpdateAccessProfile" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;00u4fptpspPVrqZUc0x6&quot;,&#xd;
  &quot;login&quot;: &quot;string&quot;,&#xd;
  &quot;status&quot;: &quot;string&quot;,&#xd;
  &quot;firstName&quot;: &quot;string&quot;,&#xd;
  &quot;middleName&quot;: &quot;string&quot;,&#xd;
  &quot;lastName&quot;: &quot;string&quot;,&#xd;
  &quot;activated&quot;: &quot;string&quot;,&#xd;
  &quot;created&quot;: &quot;string&quot;,&#xd;
  &quot;lastUpdated&quot;: &quot;string&quot;,&#xd;
  &quot;mobilePhone&quot;: &quot;string&quot;,&#xd;
  &quot;primaryEmail&quot;: &quot;string&quot;,&#xd;
  &quot;secondaryEmail&quot;: &quot;string&quot;,&#xd;
  &quot;userType&quot;: &quot;string&quot;,&#xd;
  &quot;customerId&quot;: [&#xd;
    &quot;string&quot;&#xd;
  ],&#xd;
  &quot;roles&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;string&quot;,&#xd;
      &quot;name&quot;: &quot;string&quot;,&#xd;
      &quot;description&quot;: &quot;string&quot;,&#xd;
      &quot;permission&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: &quot;string&quot;,&#xd;
          &quot;action&quot;: &quot;string&quot;,&#xd;
          &quot;resource&quot;: &quot;string&quot;,&#xd;
          &quot;name&quot;: &quot;string&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;allowedScopeType&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: &quot;string&quot;,&#xd;
          &quot;name&quot;: &quot;string&quot;,&#xd;
          &quot;description&quot;: &quot;string&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;category&quot;: {}&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/userManagement/access/profile</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Corr_Token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-341064690">resource</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">20000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
